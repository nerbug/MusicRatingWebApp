@model MusicRatingWebApp.Models.DTOs.DetailedArtistOutputDto

@{
    ViewData["Title"] = Model.Name;
}

<h1>@Html.DisplayFor(model => model.Name)</h1>

<div class="my-4">
    <div class="row my-2">
        <div class="col text-muted">
            <b>
                Average rating: 
            </b>
            @Html.DisplayFor(model => model.AverageRating)
        </div>
    </div>
    <div class="row my-2">
        <div class="col text-muted">
            <b>
                Number of ratings: 
            </b>
            @Html.DisplayFor(model => model.RatingsCount)
        </div>
    </div>
</div>

@if (Model.Songs.Count != 0)
{
    <h3>Songs</h3>
    <table class="table table-striped my-4">
        <thead>
            <tr>
                <th>Title</th>
                <th>Year</th>
                <th>Genre</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var song in Model.Songs)
            {
                <tr>
                    <td>
                        <a asp-controller="Songs" asp-action="Details" asp-route-id="@song.Id">
                            @Html.DisplayFor(modelItem => song.Title)
                        </a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => song.Year)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => song.Genre)
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<div>
    @if (User.IsInRole("Admin"))
    {
        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary rounded p-2 mr-1">Edit artist</a>
    }
    <a asp-action="Index" class="btn btn-secondary rounded p-2">Back to artist list</a>
</div>
